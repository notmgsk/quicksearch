{"name":"Quicksearch","tagline":"Find CL library, quickly.","body":"Quicksearch\r\n===========\r\n\r\nQuicksearch is a search-engine-interface for Common Lisp.  \r\nIf you want to find a library about \"foo\", just type `(qs:? 'foo)` at REPL.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n    CL-REPL> (ql:quickload :quicksearch)\r\n\r\n\r\nUsage\r\n-----\r\n\r\n    CL-REPL> (qs:? <word> [<option>])\r\n\r\n      <word>    ::= <symbol> | <string>\r\n      <option>  ::= <opt-num> | <opt-key> | <option>\r\n\r\n      <opt-num> ::= <integer>\r\n                  ~ The max number of printing results.\r\n\r\n      <opt-key> ::= :[ d | u | q | c | g | b ]+\r\n                  ~ d -- output Description (or QuickDocs-url for Quicklisp-search)\r\n                    u -- output URL\r\n                    q -- search in Quicklisp\r\n                    c -- search in Cliki\r\n                    g -- search in GitHub\r\n                    b -- search in Bitbucket\r\n\r\n\r\nTutorial\r\n--------\r\n\r\n#### Null result:\r\n\r\n    CL-REPL> (qs:? \"supercalifragilisticexpialidocious\")\r\n    NIL\r\n\r\n * If search-results is null, then just return NIL.\r\n\r\n\r\n#### Simple search:\r\n\r\n    CL-REPL> (qs:? \"crypt\")\r\n\r\n    SEARCH-RESULTS: \"crypt\"\r\n\r\n     Quicklisp\r\n      crypt\r\n\r\n     Cliki\r\n      ARC4\r\n      JARW\r\n      VLM_on_Linux\r\n\r\n     GitHub\r\n      cl-crypt\r\n      cl-crypto\r\n      cl-crypto\r\n      cryptography\r\n      cryptoschool\r\n      Cryptopsaras\r\n    T\r\n\r\n * If search-results is not null, then results are printed and return T.\r\n * Since bitbucket-result is null, it is not printed.\r\n * (If you really want to find a library for cryptography, I think \"ironclad\" is the best one.)\r\n\r\n\r\n#### Description:\r\n\r\n    CL-REPL> (qs:? 'Crypt :d)\r\n\r\n    SEARCH-RESULTS: \"crypt\"\r\n    =======================\r\n\r\n     Quicklisp\r\n     ---------\r\n      crypt\r\n          http://quickdocs.org/cl-crypt/\r\n\r\n     Cliki\r\n     -----\r\n      ARC4\r\n          A Common Lisp implementation of ARC4, a Cryptography code, can be found on\r\n          the\r\n      JARW\r\n          Dr John AR Williams' utilities\r\n      VLM_on_Linux\r\n          Instructions for running the Symbolics VLM virtual machine on Linux\r\n\r\n     GitHub\r\n     ------\r\n      cl-crypt\r\n          Common-Lisp implementation of unix crypt function\r\n      cl-crypto\r\n          A common lisp package of ciphers, public-key algorithms, etc.\r\n      cl-crypto\r\n          Pure lisp crypto, written from specs\r\n      cryptography\r\n          implementations of ciphers for cryptography class\r\n      cryptoschool\r\n          Lisp files related to the cryptography class being taught by Ben Warner\r\n      Cryptopsaras\r\n          Reads files generated by Acinonyx.\r\n    T\r\n\r\n * A symbol (as search-word) is automatically converted into a downcase-string.\r\n * If option `:d` is on, then the description of the project is printed (QuickDocs-url for Quicklisp-search).\r\n\r\n\r\n#### URL, Space, Cutoff:\r\n\r\n    CL-REPL> (qs:? \"crypt\" :ug 4)\r\n\r\n    SEARCH-RESULTS: \"crypt\"\r\n    =======================\r\n\r\n     GitHub\r\n     ------\r\n      cl-crypt\r\n          https://github.com/renard/cl-crypt\r\n      cl-crypto\r\n          https://github.com/bgs100/cl-crypto\r\n      cl-crypto\r\n          https://github.com/billstclair/cl-crypto\r\n      cryptography\r\n          https://github.com/MorganBauer/cryptography\r\n      .......> 2\r\n    T\r\n\r\n * If option `:u` is on, then the project's url is printed.\r\n * If option `:g` is on, then only github-results are printed\r\n   (also `:q` - quicklisp, `:c` - cliki, `:b` - bitbutcket. these options are addable).\r\n * If opt-num is supplied (above 4), then the number of output results is bellow opt-num\r\n   (the number (above 2) after `.......>` is the number of remains).\r\n * The order of options is nothing to do with search-result\r\n   (e.g. `\":ug 4\"` <=> `\"4 :gu\"` <=> `\":u 4 :g\"` <=> ...).\r\n\r\n\r\n#### Config:\r\n\r\n    CL-REPL> (qs:? 'lisp-koans :du 1)\r\n\r\n    SEARCH-RESULTS: \"lisp-koans\"\r\n    ============================\r\n\r\n     GitHub\r\n     ------\r\n      lisp-koans\r\n          https://github.com/google/lisp-koans\r\n          Common Lisp Koans is a language learning exercise in the same vein as the\r\n          ruby koans, python koans and others.   It is a port of the prior koans\r\n          with some modifications to highlight lisp-specific features.  Structured\r\n          as ordered groups of broken unit tests, the project guides the learner\r\n          progressively through many Common Lisp language features.\r\n      .......> 4\r\n    T\r\n\r\n    CL-REPL> (qs:config :maximum-columns-of-description 50)\r\n    Current maximum columns of description: 50\r\n    T\r\n\r\n    CL-REPL> (qs:? 'lisp-koans :du 1)\r\n\r\n    SEARCH-RESULTS: \"lisp-koans\"\r\n    ============================\r\n\r\n     GitHub\r\n     ------\r\n      lisp-koans\r\n          https://github.com/google/lisp-koans\r\n          Common Lisp Koans is a language learning\r\n          exercise in the same vein as the ruby koans,\r\n          python koans and others.   It is a port of\r\n          the prior koans with some modifications to\r\n          highlight lisp-specific features.\r\n          Structured as ordered groups of broken unit\r\n          tests, the project guides the learner\r\n          progressively through many Common Lisp\r\n          language features.\r\n      .......> 4\r\n    T\r\n\r\n * `:maximum-columns-of-description` controls in printing description (default is 80).\r\n\r\n\r\nAuthor, License, Copyright\r\n--------------------------\r\n\r\n#### Takaya OCHIAI  <#.(reverse \"moc.liamg@lper.hcykt\")>\r\n\r\n#### MIT License\r\n\r\n#### Copyright (C) 2013 Takaya OCHIAI\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}